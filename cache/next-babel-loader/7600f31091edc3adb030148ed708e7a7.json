{"ast":null,"code":"import graphql from 'src/data/shared/graphql';\nconst organizationQuery = `\nquery($domain:String!) {\n  organizations:cms_organizations(\n    where:{\n      domain:{\n        _eq:$domain\n      }\n    }\n  ){\n    id\n    organization_type {\n      id\n      organization_type_name\n    }\n    organization_name\n    face\n    phone\n    zalo\n    youtube_channel\n    mail\n    slug_organization\n    address\n    logo_url\n    twitter\n    wiki_url\n    domain\n  }\n}\n`;\nconst menusQuery = `\nquery($organization_id:uuid!){\n    cms_menus(\n      where:{\n        _and:[{\n          parent_id:{\n            _is_null:true\n          }\n        }, {\n          organization_id:{\n            _eq:$organization_id\n          }\n        }]\n      },\n      order_by:{\n        position:asc_nulls_last  \n      }\n    ){\n      id\n      slug_menu\n      slug:slug_menu\n      title_on_menu\n      title:title_on_menu\n      href\n      reference {\n        id\n        entity_type\n        slug\n      }\n      menus(\n        order_by:{\n          position:asc_nulls_last\n        }\n      ){\n        id\n        slug:slug_menu\n        title_on_menu\n        title:title_on_menu\n        reference {\n          id\n          entity_type\n          slug\n        }\n        href\n      }\n    }\n  }\n  `;\nexport const getStaticProps = async () => {\n  const variables = {\n    domain: process.env.settings.organization_domain\n  };\n  const {\n    organizations: [organization, ...rest]\n  } = await graphql({\n    query: organizationQuery,\n    variables\n  });\n  const {\n    cms_menus: menus\n  } = await graphql({\n    query: menusQuery,\n    variables: {\n      organization_id: organization.id\n    }\n  });\n  const meta = {\n    locale: 'vi',\n    seo: {\n      title: 'About'\n    }\n  };\n  const props = {\n    data: {\n      organization,\n      menus,\n      meta\n    }\n  };\n  return {\n    props\n  };\n};","map":null,"metadata":{},"sourceType":"module"}