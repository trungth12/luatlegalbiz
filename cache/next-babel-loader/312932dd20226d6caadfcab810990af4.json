{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport graphql from 'src/data/shared/graphql';\nimport { getStaticProps as fetchMenusProps } from 'src/data/shared/fetchMenusProps';\nconst query = `\nquery($organization_id:uuid!){\n  cms_articles(\n    where:{\n      _and:[{\n        organization_id:{\n          _eq:$organization_id\n        }\n      }]          \n    },\n    limit: 3,\n    order_by: {\n      created_at:desc_nulls_last\n    }\n  ){\n    id\n    title\n    banner\n    img_url\n    intro_text\n    author\n    published_at\n    slug:slug_article\n    amp_enabled\n    category {\n      id\n      slug:slug_category\n      category_name\n      banner\n      thumbnail\n    }\n  }\n}\n`;\nexport const getStaticProps = async () => {\n  const {\n    props: {\n      data: {\n        organization,\n        menus,\n        meta\n      }\n    }\n  } = await fetchMenusProps();\n  const variables = {\n    organization_id: organization.id\n  };\n  const data = await graphql({\n    query,\n    variables\n  });\n  const {\n    cms_articles\n  } = data;\n  const news_category = cms_articles[0] ? cms_articles[0].category : {};\n  return {\n    props: {\n      data: _objectSpread(_objectSpread({\n        organization,\n        menus,\n        meta\n      }, data), {}, {\n        news_category\n      })\n    }\n  };\n};","map":{"version":3,"sources":["F:/luatlegalbiz/packages/luatlegalbiz/src/data/home/index.js"],"names":["graphql","getStaticProps","fetchMenusProps","query","props","data","organization","menus","meta","variables","organization_id","id","cms_articles","news_category","category"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,yBAApB;AACA,SAASC,cAAc,IAAIC,eAA3B,QAAkD,iCAAlD;AACA,MAAMC,KAAK,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAf;AAkCA,OAAO,MAAMF,cAAc,GAAG,YAAY;AACxC,QAAM;AAAEG,IAAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA,KAAhB;AAAuBC,QAAAA;AAAvB;AAAR;AAAT,MAAqD,MAAMN,eAAe,EAAhF;AACA,QAAMO,SAAS,GAAG;AAChBC,IAAAA,eAAe,EAAEJ,YAAY,CAACK;AADd,GAAlB;AAGA,QAAMN,IAAI,GAAG,MAAML,OAAO,CAAC;AAAEG,IAAAA,KAAF;AAASM,IAAAA;AAAT,GAAD,CAA1B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAmBP,IAAzB;AACA,QAAMQ,aAAa,GAAGD,YAAY,CAAC,CAAD,CAAZ,GAAkBA,YAAY,CAAC,CAAD,CAAZ,CAAgBE,QAAlC,GAA6C,EAAnE;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI;AACFC,QAAAA,YADE;AAEFC,QAAAA,KAFE;AAGFC,QAAAA;AAHE,SAICH,IAJD;AAKFQ,QAAAA;AALE;AADC;AADF,GAAP;AAWD,CAnBM","sourcesContent":["import graphql from 'src/data/shared/graphql'\r\nimport { getStaticProps as fetchMenusProps } from 'src/data/shared/fetchMenusProps'\r\nconst query = `\r\nquery($organization_id:uuid!){\r\n  cms_articles(\r\n    where:{\r\n      _and:[{\r\n        organization_id:{\r\n          _eq:$organization_id\r\n        }\r\n      }]          \r\n    },\r\n    limit: 3,\r\n    order_by: {\r\n      created_at:desc_nulls_last\r\n    }\r\n  ){\r\n    id\r\n    title\r\n    banner\r\n    img_url\r\n    intro_text\r\n    author\r\n    published_at\r\n    slug:slug_article\r\n    amp_enabled\r\n    category {\r\n      id\r\n      slug:slug_category\r\n      category_name\r\n      banner\r\n      thumbnail\r\n    }\r\n  }\r\n}\r\n`\r\nexport const getStaticProps = async () => {\r\n  const { props: { data: { organization, menus, meta } } } = await fetchMenusProps()\r\n  const variables = {\r\n    organization_id: organization.id\r\n  }\r\n  const data = await graphql({ query, variables })\r\n  const { cms_articles } = data\r\n  const news_category = cms_articles[0] ? cms_articles[0].category : {}\r\n  return {\r\n    props: {\r\n      data: {\r\n        organization,\r\n        menus,\r\n        meta,\r\n        ...data,\r\n        news_category,\r\n      }\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}