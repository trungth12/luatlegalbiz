{"ast":null,"code":"var _jsxFileName = \"F:\\\\luatlegalbiz\\\\packages\\\\luatlegalbiz\\\\src\\\\components\\\\Funfact\\\\funfactItem.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport CountUp from 'react-countup';\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nclass FunfactItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      appear: false\n    });\n\n    _defineProperty(this, \"visibleChangeHandler\", isVisible => {\n      if (isVisible) {\n        this.setState({\n          appear: true\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"col-6 col-md-3 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"counter-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, __jsx(\"h2\", {\n      className: \"counter-number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, __jsx(CountUp, {\n      start: this.state.appear ? 0 : null,\n      end: this.props.counterNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }, ({\n      countUpRef\n    }) => __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 33\n      }\n    }, __jsx(\"span\", {\n      ref: countUpRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 37\n      }\n    }), __jsx(VisibilitySensor, {\n      onChange: isVisible => this.visibleChangeHandler(isVisible),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 37\n      }\n    }, __jsx(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 41\n      }\n    }, \"+\"))))), __jsx(\"h6\", {\n      className: \"counter-txt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, this.props.counterText)));\n  }\n\n}\n\nexport default FunfactItem;","map":{"version":3,"sources":["F:/luatlegalbiz/packages/luatlegalbiz/src/components/Funfact/funfactItem.js"],"names":["React","Component","CountUp","VisibilitySensor","FunfactItem","appear","isVisible","setState","render","state","props","counterNumber","countUpRef","visibleChangeHandler","counterText"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAExB;AACJI,MAAAA,MAAM,EAAE;AADJ,KAFwB;;AAAA,kDAMRC,SAAD,IAAe;AAClC,UAAGA,SAAH,EAAa;AACT,aAAKC,QAAL,CAAc;AACVF,UAAAA,MAAM,EAAE;AADE,SAAd;AAGH;AACJ,KAZ+B;AAAA;;AAchCG,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,OAAD;AAAS,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWJ,MAAX,GAAoB,CAApB,GAAwB,IAAxC;AAA8C,MAAA,GAAG,EAAE,KAAKK,KAAL,CAAWC,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAAEC,MAAAA;AAAF,KAAD,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,GAAG,EAAEA,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,MAAC,gBAAD;AACI,MAAA,QAAQ,EAAGN,SAAD,IAAe,KAAKO,oBAAL,CAA0BP,SAA1B,CAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CAFJ,CAFR,CADJ,CADJ,EAeI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKI,KAAL,CAAWI,WAAxC,CAfJ,CADJ,CADJ;AAqBH;;AApC+B;;AAuCpC,eAAeV,WAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport CountUp from 'react-countup'\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nclass FunfactItem extends Component {\r\n\r\n    state = {\r\n        appear: false\r\n    }\r\n\r\n    visibleChangeHandler = (isVisible) => {\r\n        if(isVisible){\r\n            this.setState({\r\n                appear: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-6 col-md-3 text-center\">\r\n                <div className=\"counter-item\">\r\n                    <h2 className=\"counter-number\">\r\n                        <CountUp start={this.state.appear ? 0 : null} end={this.props.counterNumber}>\r\n                            {({ countUpRef }) => (\r\n                                <div>\r\n                                    <span ref={countUpRef} />\r\n                                    <VisibilitySensor\r\n                                        onChange={(isVisible) => this.visibleChangeHandler(isVisible)}>\r\n                                        <span className=\"sr-only\">+</span>\r\n                                    </VisibilitySensor>\r\n                                </div>\r\n                            )}\r\n                        </CountUp>\r\n                    </h2>\r\n\r\n                    <h6 className=\"counter-txt\">{this.props.counterText}</h6>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FunfactItem;"]},"metadata":{},"sourceType":"module"}