{"ast":null,"code":"import graphql from 'src/data/shared/graphql';\nconst query = `\nquery($article_id:uuid!){\n  result:cms_search_article_relate_new(\n    limit: 3,\n    args: {\n      article:$article_id\n    }\n  ){\n    id\n    title\n    banner\n    img_url\n    intro_text\n    full_text\n    author\n    published_at\n    slug:slug_article\n    amp_enabled\n    category {\n      id\n      slug:slug_category\n      category_name\n      banner\n      thumbnail\n    }\n  }\n}\n`;\nexport const getStaticProps = async ({\n  article\n}) => {\n  const variables = {\n    article_id: article.id\n  };\n  const {\n    result: relatedArticlesData\n  } = await graphql({\n    query,\n    variables\n  });\n  return {\n    props: {\n      data: {\n        relatedArticlesData\n      }\n    }\n  };\n};","map":{"version":3,"sources":["F:/luatlegalbiz/packages/luatlegalbiz/src/data/slug/getRelatedArticles.js"],"names":["graphql","query","getStaticProps","article","variables","article_id","id","result","relatedArticlesData","props","data"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,yBAApB;AACA,MAAMC,KAAK,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAf;AA4BA,OAAO,MAAMC,cAAc,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAuB;AACnD,QAAMC,SAAS,GAAG;AAChBC,IAAAA,UAAU,EAAEF,OAAO,CAACG;AADJ,GAAlB;AAGA,QAAM;AACJC,IAAAA,MAAM,EAAEC;AADJ,MAEF,MAAMR,OAAO,CAAC;AAAEC,IAAAA,KAAF;AAASG,IAAAA;AAAT,GAAD,CAFjB;AAGA,SAAO;AACLK,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE;AACJF,QAAAA;AADI;AADD;AADF,GAAP;AAOD,CAdM","sourcesContent":["import graphql from 'src/data/shared/graphql'\r\nconst query = `\r\nquery($article_id:uuid!){\r\n  result:cms_search_article_relate_new(\r\n    limit: 3,\r\n    args: {\r\n      article:$article_id\r\n    }\r\n  ){\r\n    id\r\n    title\r\n    banner\r\n    img_url\r\n    intro_text\r\n    full_text\r\n    author\r\n    published_at\r\n    slug:slug_article\r\n    amp_enabled\r\n    category {\r\n      id\r\n      slug:slug_category\r\n      category_name\r\n      banner\r\n      thumbnail\r\n    }\r\n  }\r\n}\r\n`\r\nexport const getStaticProps = async ({ article }) => {\r\n  const variables = {\r\n    article_id: article.id,\r\n  }\r\n  const {\r\n    result: relatedArticlesData\r\n  } = await graphql({ query, variables })\r\n  return {\r\n    props: {\r\n      data: {\r\n        relatedArticlesData,\r\n      }\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}