{"ast":null,"code":"var _jsxFileName = \"F:\\\\luatlegalbiz\\\\packages\\\\luatlegalbiz\\\\src\\\\templates\\\\Blog\\\\MyBlogContent.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from 'react';\nimport BlogItem from \"../../components/Blog/blogItem\";\nimport BlogItemList from \"../../components/Blog/blogItemList\";\nimport Pagination from \"../../components/Pagination\";\nimport useData from 'src/data/shared/useData';\nimport { useRouter } from 'next/router';\n\nconst Main = ({\n  cols,\n  classes,\n  blog_type\n}) => {\n  _s();\n\n  const router = useRouter();\n  const {\n    category,\n    meta: {\n      locale,\n      currentPage,\n      postsPerPage\n    }\n  } = useData();\n  const [page, setPage] = React.useState(currentPage);\n  const currentPosts = category.articles_aggregate.nodes; // Change page\n\n  const paginate = cur => {\n    if (cur > 0 && cur <= category.total.aggregate.count) {\n      router.push(`${locale === 'vi' ? '' : locale}/${category.slug}/${cur}`);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: cols + ' ' + classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: `blog-content-wrapper ${blog_type === 'list' && 'blog-list'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"row mtn-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, blog_type === 'list' ? __jsx(\"div\", {\n    className: 'col-12',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, currentPosts.map(blog => __jsx(BlogItemList, {\n    key: blog.id,\n    id: blog.id,\n    itemUrl: `${locale === 'vi' ? '' : locale}/${blog.slug}`,\n    thumb: blog.img_url || blog.banner || require('src/assets/img/blog/01.jpg'),\n    title: blog.title,\n    excerpt: blog.intro_text,\n    postBy: blog.author,\n    date: blog.published_at,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 41\n    }\n  }))) : currentPosts.map(blog => __jsx(BlogItem, {\n    key: blog.id,\n    id: blog.id,\n    itemUrl: `${locale === 'vi' ? '' : locale}/${blog.slug}`,\n    cols: cols === 'col-12' ? 'col-md-6 col-lg-4' : 'col-md-6',\n    thumb: blog.img_url,\n    title: blog.title,\n    excerpt: blog.intro_text,\n    postBy: blog.author,\n    date: blog.published_at,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }\n  })))), __jsx(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: category.total.aggregate.count,\n    paginate: paginate,\n    currentPage: page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })));\n};\n\n_s(Main, \"5/2uquCVD+hPefRMXodMnxxhPGg=\", false, function () {\n  return [useRouter, useData];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["F:/luatlegalbiz/packages/luatlegalbiz/src/templates/Blog/MyBlogContent.js"],"names":["React","Component","Fragment","BlogItem","BlogItemList","Pagination","useData","useRouter","Main","cols","classes","blog_type","router","category","meta","locale","currentPage","postsPerPage","page","setPage","useState","currentPosts","articles_aggregate","nodes","paginate","cur","total","aggregate","count","push","slug","map","blog","id","img_url","banner","require","title","intro_text","author","published_at"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport BlogItem from \"../../components/Blog/blogItem\";\r\nimport BlogItemList from \"../../components/Blog/blogItemList\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport useData from 'src/data/shared/useData'\r\nimport { useRouter } from 'next/router'\r\nconst Main = ({ cols, classes, blog_type }) => {\r\n  const router = useRouter()\r\n  const {\r\n    category,\r\n    meta: {\r\n      locale,\r\n      currentPage,\r\n      postsPerPage,\r\n    }\r\n  } = useData()\r\n  const [page, setPage] = React.useState(currentPage)\r\n  \r\n  const currentPosts = category.articles_aggregate.nodes\r\n\r\n  // Change page\r\n  const paginate = cur => {\r\n    if (cur > 0 && cur <= category.total.aggregate.count) {\r\n      router.push(`${locale === 'vi' ? '' : locale}/${category.slug}/${cur}`)\r\n    }\r\n  }\r\n  return (\r\n    <div className={cols + ' ' + classes}>\r\n        <Fragment>\r\n            <div className={`blog-content-wrapper ${blog_type === 'list' && 'blog-list'}`}>\r\n                <div className=\"row mtn-30\">\r\n                    {\r\n                        blog_type === 'list' ? (\r\n                            <div className={'col-12'}>\r\n                                {\r\n                                    currentPosts.map(blog => (\r\n                                        <BlogItemList\r\n                                            key={blog.id}\r\n                                            id={blog.id}\r\n                                            itemUrl={`${locale === 'vi' ? '' : locale}/${blog.slug}`}\r\n                                            thumb={blog.img_url || blog.banner || require('src/assets/img/blog/01.jpg')}\r\n                                            title={blog.title}\r\n                                            excerpt={blog.intro_text}\r\n                                            postBy={blog.author}\r\n                                            date={blog.published_at}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        ) : (\r\n                            currentPosts.map(blog => (\r\n                                <BlogItem\r\n                                    key={blog.id}\r\n                                    id={blog.id}\r\n                                    itemUrl={`${locale === 'vi' ? '' : locale}/${blog.slug}`}\r\n                                    cols={cols === 'col-12' ? 'col-md-6 col-lg-4' : 'col-md-6'}\r\n                                    thumb={blog.img_url}\r\n                                    title={blog.title}\r\n                                    excerpt={blog.intro_text}\r\n                                    postBy={blog.author}\r\n                                    date={blog.published_at}\r\n                                />\r\n                            ))\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <Pagination\r\n                postsPerPage={postsPerPage}\r\n                totalPosts={category.total.aggregate.count}\r\n                paginate={paginate}\r\n                currentPage={page}\r\n            />\r\n        </Fragment>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}