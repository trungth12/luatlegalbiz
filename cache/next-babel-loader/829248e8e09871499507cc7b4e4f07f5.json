{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport withData from 'src/data/shared/DataProvider';\nimport { getStaticProps as fetchOrganization } from 'src/data/admin/fetchOrganization';\nconst Cms = dynamic(() => import('src/components/admin/cms'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('src/components/admin/cms')],\n    modules: ['src/components/admin/cms']\n  }\n});\nconst Gallery = dynamic(() => import('src/components/admin/gallery'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('src/components/admin/gallery')],\n    modules: ['src/components/admin/gallery']\n  }\n});\n\nconst Index = ({\n  params\n}) => {\n  const {\n    mod\n  } = params;\n  return mod === 'cms' ? __jsx(Cms, null) : mod === 'gallery' ? __jsx(Gallery, null) : __jsx(\"span\", null, \"Not found\");\n};\n\nexport default withData(Index);\nexport const getStaticProps = async ({\n  params\n}) => {\n  const organizationProps = await fetchOrganization();\n  return {\n    props: _objectSpread(_objectSpread({}, organizationProps.props), {}, {\n      params\n    })\n  };\n};\nexport const getStaticPaths = () => {\n  const paths = [{\n    params: {\n      mod: 'cms'\n    }\n  }, {\n    params: {\n      mod: 'gallery'\n    }\n  }];\n  return {\n    paths,\n    fallback: false\n  };\n};","map":null,"metadata":{},"sourceType":"module"}