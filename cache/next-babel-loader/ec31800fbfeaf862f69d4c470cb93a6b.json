{"ast":null,"code":"import graphql from 'src/data/shared/graphql';\nconst organizationQuery = `\nquery($domain:String!) {\n  organizations:cms_organizations(\n    where:{\n      domain:{\n        _eq:$domain\n      }\n    }\n  ){\n    id\n    organization_type {\n      id\n      organization_type_name\n    }\n    organization_name\n    face\n    phone\n    zalo\n    youtube_channel\n    mail\n    slug_organization\n    address\n    logo_url\n    twitter\n    wiki_url\n    domain\n  }\n}\n`;\nconst menusQuery = `\nquery($organization_id:uuid!){\n    cms_menus(\n      where:{\n        _and:[{\n          parent_id:{\n            _is_null:true\n          }\n        }, {\n          organization_id:{\n            _eq:$organization_id\n          }\n        }]\n      },\n      order_by:{\n        position:asc_nulls_last  \n      }\n    ){\n      id\n      slug_menu\n      slug:slug_menu\n      title_on_menu\n      title:title_on_menu\n      href\n      reference {\n        id\n        entity_type\n        slug\n      }\n      menus(\n        order_by:{\n          position:asc_nulls_last\n        }\n      ){\n        id\n        slug:slug_menu\n        title_on_menu\n        title:title_on_menu\n        reference {\n          id\n          entity_type\n          slug\n        }\n        href\n      }\n    }\n  }\n  `;\nexport const getStaticProps = async () => {\n  const variables = {\n    domain: process.env.settings.organization_domain\n  };\n  const {\n    organizations: [organization, ...rest]\n  } = await graphql({\n    query: organizationQuery,\n    variables\n  });\n  const {\n    cms_menus: menus\n  } = await graphql({\n    query: menusQuery,\n    variables: {\n      organization_id: organization.id\n    }\n  });\n  const meta = {\n    locale: 'vi',\n    seo: {\n      title: 'About'\n    }\n  };\n  const props = {\n    data: {\n      organization,\n      menus,\n      meta\n    }\n  };\n  return {\n    props\n  };\n};","map":{"version":3,"sources":["F:/luatlegalbiz/packages/luatlegalbiz/src/data/shared/fetchMenusProps.js"],"names":["graphql","organizationQuery","menusQuery","getStaticProps","variables","domain","process","env","settings","organization_domain","organizations","organization","rest","query","cms_menus","menus","organization_id","id","meta","locale","seo","title","props","data"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,yBAApB;AACA,MAAMC,iBAAiB,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA3B;AA6BA,MAAMC,UAAU,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAApB;AAiDA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,SAAS,GAAG;AAChBC,IAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,CAAqBC;AADb,GAAlB;AAGA,QAAM;AAAEC,IAAAA,aAAa,EAAE,CAACC,YAAD,EAAe,GAAGC,IAAlB;AAAjB,MAA6C,MAAMZ,OAAO,CAAC;AAAEa,IAAAA,KAAK,EAAEZ,iBAAT;AAA4BG,IAAAA;AAA5B,GAAD,CAAhE;AACA,QAAM;AAAEU,IAAAA,SAAS,EAAEC;AAAb,MAAuB,MAAMf,OAAO,CAAC;AAAEa,IAAAA,KAAK,EAAEX,UAAT;AAAqBE,IAAAA,SAAS,EAAE;AAAEY,MAAAA,eAAe,EAAEL,YAAY,CAACM;AAAhC;AAAhC,GAAD,CAA1C;AACA,QAAMC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,IADC;AAETC,IAAAA,GAAG,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAFI,GAAb;AAIA,QAAMC,KAAK,GAAG;AAAEC,IAAAA,IAAI,EAAE;AAAEZ,MAAAA,YAAF;AAAgBI,MAAAA,KAAhB;AAAuBG,MAAAA;AAAvB;AAAR,GAAd;AACA,SAAO;AACLI,IAAAA;AADK,GAAP;AAGD,CAdM","sourcesContent":["import graphql from 'src/data/shared/graphql'\r\nconst organizationQuery = `\r\nquery($domain:String!) {\r\n  organizations:cms_organizations(\r\n    where:{\r\n      domain:{\r\n        _eq:$domain\r\n      }\r\n    }\r\n  ){\r\n    id\r\n    organization_type {\r\n      id\r\n      organization_type_name\r\n    }\r\n    organization_name\r\n    face\r\n    phone\r\n    zalo\r\n    youtube_channel\r\n    mail\r\n    slug_organization\r\n    address\r\n    logo_url\r\n    twitter\r\n    wiki_url\r\n    domain\r\n  }\r\n}\r\n`\r\nconst menusQuery = `\r\nquery($organization_id:uuid!){\r\n    cms_menus(\r\n      where:{\r\n        _and:[{\r\n          parent_id:{\r\n            _is_null:true\r\n          }\r\n        }, {\r\n          organization_id:{\r\n            _eq:$organization_id\r\n          }\r\n        }]\r\n      },\r\n      order_by:{\r\n        position:asc_nulls_last  \r\n      }\r\n    ){\r\n      id\r\n      slug_menu\r\n      slug:slug_menu\r\n      title_on_menu\r\n      title:title_on_menu\r\n      href\r\n      reference {\r\n        id\r\n        entity_type\r\n        slug\r\n      }\r\n      menus(\r\n        order_by:{\r\n          position:asc_nulls_last\r\n        }\r\n      ){\r\n        id\r\n        slug:slug_menu\r\n        title_on_menu\r\n        title:title_on_menu\r\n        reference {\r\n          id\r\n          entity_type\r\n          slug\r\n        }\r\n        href\r\n      }\r\n    }\r\n  }\r\n  `\r\n\r\nexport const getStaticProps = async () => {\r\n  const variables = {\r\n    domain: process.env.settings.organization_domain\r\n  }\r\n  const { organizations: [organization, ...rest] } = await graphql({ query: organizationQuery, variables })\r\n  const { cms_menus: menus } = await graphql({ query: menusQuery, variables: { organization_id: organization.id } })\r\n  const meta = {\r\n      locale: 'vi',\r\n      seo: { title: 'About' }\r\n  }\r\n  const props = { data: { organization, menus, meta } }\r\n  return {\r\n    props\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}