{"ast":null,"code":"var _jsxFileName = \"F:\\\\luatlegalbiz\\\\packages\\\\luatlegalbiz\\\\src\\\\pages\\\\[...slug].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport withData from 'src/data/shared/DataProvider';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { NextSeo } from 'next-seo';\nconst Article = dynamic(_c = () => import('src/components/article'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('src/components/article')],\n    modules: ['src/components/article']\n  }\n});\n_c2 = Article;\nconst Category = dynamic(_c3 = () => import('src/components/categories'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('src/components/categories')],\n    modules: ['src/components/categories']\n  }\n});\n_c4 = Category;\n\nconst stringToArray = str => {\n  if (str) {\n    return str.split(\",\");\n  } else {\n    return [];\n  }\n};\n\nconst AmpHead = ({\n  data\n}) => {\n  const tags = data.post ? stringToArray(data.post.tags) : data.category ? stringToArray(data.category.tags) : [];\n  const keywords = data.post ? stringToArray(data.post.keywords) : data.category ? stringToArray(data.category.keywords) : [];\n  const publishedTime = data.post ? data.post.created_at : data.category ? data.category.created_at : new Date();\n  const additionalMetaTags = [{\n    property: 'keywords',\n    content: keywords\n  }];\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(\"link\", {\n    rel: \"amphtml\",\n    href: `https://${data.settings.domain}/amp/${data.meta.slug}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, data.meta.seo.title)), __jsx(NextSeo, {\n    additionalMetaTags: additionalMetaTags,\n    openGraph: {\n      title: data.meta.seo.title,\n      description: data.meta.seo.title,\n      url: `https://${data.settings.domain}/${data.meta.slug}`,\n      type: data.post ? 'article' : 'category',\n      article: {\n        publishedTime,\n        modifiedTime: publishedTime,\n        authors: [],\n        tags\n      },\n      images: [{\n        url: 'https://www.test.ie/images/cover.jpg',\n        width: 850,\n        height: 650,\n        alt: data.meta.seo.title\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }));\n};\n\n_c5 = AmpHead;\n\nconst Index = ({\n  data,\n  error\n}) => {\n  _s();\n\n  const {\n    isFallback\n  } = useRouter();\n  return __jsx(React.Fragment, null, Boolean(error) ? JSON.stringify(error, null, 2) : null, isFallback ? \"...loading\" : null, Boolean(data) && Boolean(data.post) ? __jsx(React.Fragment, null, __jsx(AmpHead, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), __jsx(Article, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  })) : null, Boolean(data) && Boolean(data.category) ? __jsx(React.Fragment, null, __jsx(AmpHead, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), __jsx(Category, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  })) : null);\n};\n\n_s(Index, \"Ch/bV+mPq0h+JIhwQrjzTmaO/YQ=\", false, function () {\n  return [useRouter];\n});\n\n_c6 = Index;\nexport var __N_SSG = true;\nexport default _c7 = withData(Index);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Article$dynamic\");\n$RefreshReg$(_c2, \"Article\");\n$RefreshReg$(_c3, \"Category$dynamic\");\n$RefreshReg$(_c4, \"Category\");\n$RefreshReg$(_c5, \"AmpHead\");\n$RefreshReg$(_c6, \"Index\");\n$RefreshReg$(_c7, \"%default%\");","map":{"version":3,"sources":["F:/luatlegalbiz/packages/luatlegalbiz/src/pages/[...slug].js"],"names":["React","dynamic","withData","useRouter","Head","NextSeo","Article","Category","stringToArray","str","split","AmpHead","data","tags","post","category","keywords","publishedTime","created_at","Date","additionalMetaTags","property","content","settings","domain","meta","slug","seo","title","description","url","type","article","modifiedTime","authors","images","width","height","alt","Index","error","isFallback","Boolean","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport dynamic from 'next/dynamic'\r\nimport withData from 'src/data/shared/DataProvider'\r\nimport { useRouter } from 'next/router'\r\nimport Head from 'next/head'\r\nimport { NextSeo } from 'next-seo';\r\nimport { getStaticPaths as gSP } from 'src/data/slug'\r\nconst Article = dynamic(() => import('src/components/article'))\r\nconst Category = dynamic(() => import('src/components/categories'))\r\nconst stringToArray = (str) => {\r\n  if (str) {\r\n    return str.split(\",\")\r\n  } else {\r\n    return []\r\n  }\r\n}\r\nconst AmpHead = ({ data }) => {\r\n  const tags = data.post ? stringToArray(data.post.tags) : (data.category ? stringToArray(data.category.tags) : [])\r\n  const keywords = data.post ? stringToArray(data.post.keywords) : (data.category ? stringToArray(data.category.keywords) : [])\r\n  const publishedTime = data.post ? data.post.created_at : (data.category ? data.category.created_at : new Date())\r\n  const additionalMetaTags = [{\r\n    property: 'keywords',\r\n    content: keywords\r\n  }]\r\n  return (\r\n    <>\r\n    <Head>\r\n      <link rel=\"amphtml\" href={`https://${data.settings.domain}/amp/${data.meta.slug}`} />\r\n      <title>{data.meta.seo.title}</title>\r\n    </Head>\r\n    <NextSeo\r\n      additionalMetaTags={additionalMetaTags}\r\n      openGraph={{\r\n        title: data.meta.seo.title,\r\n        description: data.meta.seo.title,\r\n        url: `https://${data.settings.domain}/${data.meta.slug}`,\r\n        type: data.post ? 'article' : 'category',\r\n        article: {\r\n          publishedTime,\r\n          modifiedTime: publishedTime,\r\n          authors: [\r\n          ],\r\n          tags,\r\n        },\r\n        images: [\r\n          {\r\n            url: 'https://www.test.ie/images/cover.jpg',\r\n            width: 850,\r\n            height: 650,\r\n            alt: data.meta.seo.title,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n    </>\r\n  )\r\n}\r\n\r\nconst Index = ({ data, error }) => {\r\n  const { isFallback } = useRouter()\r\n  \r\n  return (\r\n    <>\r\n    \r\n    <If condition={Boolean(error)}>\r\n      {JSON.stringify(error, null, 2)}\r\n    </If>\r\n    <If condition={isFallback}>\r\n      ...loading\r\n    </If>\r\n    <If condition={Boolean(data) && Boolean(data.post)}>\r\n      <>\r\n      <AmpHead data={data} />\r\n      <Article />\r\n      </>\r\n    </If>\r\n    <If condition={Boolean(data) && Boolean(data.category)}>\r\n      <>\r\n      <AmpHead data={data} />\r\n      <Category />\r\n      </>\r\n    </If>\r\n    </>\r\n  )\r\n}\r\nexport default withData(Index)\r\nexport {\r\n  getStaticProps,  \r\n} from 'src/data/slug'\r\nexport const getStaticPaths = gSP()"]},"metadata":{},"sourceType":"module"}